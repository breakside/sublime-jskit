{
  "scope": "source.js - comment - string",
  "completions": [
    {
      "trigger": "UIApplication",
      "contents": "UIApplication"
    },
    {
      "trigger": "UIPlatform",
      "contents": "UIPlatform"
    },
    {
      "trigger": "UIResponder",
      "contents": "UIResponder"
    },
    {
      "trigger": "UIEvent",
      "contents": "UIEvent"
    },
    {
      "trigger": "UITouch",
      "contents": "UITouch"
    },
    {
      "trigger": "UILayer",
      "contents": "UILayer"
    },
    {
      "trigger": "Properties",
      "contents": "Properties"
    },
    {
      "trigger": "UIView",
      "contents": "UIView"
    },
    {
      "trigger": "UIViewController",
      "contents": "UIViewController"
    },
    {
      "trigger": "UIWindow",
      "contents": "UIWindow"
    },
    {
      "trigger": "UIWindowStyler",
      "contents": "UIWindowStyler"
    },
    {
      "trigger": "UIWindowDefaultStyler",
      "contents": "UIWindowDefaultStyler"
    },
    {
      "trigger": "ControlButtonImages",
      "contents": "ControlButtonImages"
    },
    {
      "trigger": "UIWindowCustomStyler",
      "contents": "UIWindowCustomStyler"
    },
    {
      "trigger": "UIWindowController",
      "contents": "UIWindowController"
    },
    {
      "trigger": "UIToolbar",
      "contents": "UIToolbar"
    },
    {
      "trigger": "UIToolbarItem",
      "contents": "UIToolbarItem"
    },
    {
      "trigger": "UIScene",
      "contents": "UIScene"
    },
    {
      "trigger": "UIScreen",
      "contents": "UIScreen"
    },
    {
      "trigger": "UICursor",
      "contents": "UICursor"
    },
    {
      "trigger": "UIViewPropertyAnimator",
      "contents": "UIViewPropertyAnimator"
    },
    {
      "trigger": "UIAnimationTransaction",
      "contents": "UIAnimationTransaction"
    },
    {
      "trigger": "UIAnimation",
      "contents": "UIAnimation"
    },
    {
      "trigger": "UIBasicAnimation",
      "contents": "UIBasicAnimation"
    },
    {
      "trigger": "UIPropertyAnimation",
      "contents": "UIPropertyAnimation"
    },
    {
      "trigger": "UIControl",
      "contents": "UIControl"
    },
    {
      "trigger": "UIControlStyler",
      "contents": "UIControlStyler"
    },
    {
      "trigger": "UIButton",
      "contents": "UIButton"
    },
    {
      "trigger": "UIButtonStyler",
      "contents": "UIButtonStyler"
    },
    {
      "trigger": "UIButtonDefaultStyler",
      "contents": "UIButtonDefaultStyler"
    },
    {
      "trigger": "UIButtonCustomStyler",
      "contents": "UIButtonCustomStyler"
    },
    {
      "trigger": "UIButtonImageStyler",
      "contents": "UIButtonImageStyler"
    },
    {
      "trigger": "UIPopupButton",
      "contents": "UIPopupButton"
    },
    {
      "trigger": "UIPopupButtonStyler",
      "contents": "UIPopupButtonStyler"
    },
    {
      "trigger": "UIPopupButtonCustomStyler",
      "contents": "UIPopupButtonCustomStyler"
    },
    {
      "trigger": "UIPopupButtonDefaultStyler",
      "contents": "UIPopupButtonDefaultStyler"
    },
    {
      "trigger": "UICheckbox",
      "contents": "UICheckbox"
    },
    {
      "trigger": "UICheckboxStyler",
      "contents": "UICheckboxStyler"
    },
    {
      "trigger": "UICheckboxDefaultStyler",
      "contents": "UICheckboxDefaultStyler"
    },
    {
      "trigger": "UIRadioGroup",
      "contents": "UIRadioGroup"
    },
    {
      "trigger": "UIRadioGroupStyler",
      "contents": "UIRadioGroupStyler"
    },
    {
      "trigger": "UIRadioGroupDefaultStyler",
      "contents": "UIRadioGroupDefaultStyler"
    },
    {
      "trigger": "UIRadioButton",
      "contents": "UIRadioButton"
    },
    {
      "trigger": "UIRadioButtonStyler",
      "contents": "UIRadioButtonStyler"
    },
    {
      "trigger": "UIRadioButtonDefaultStyler",
      "contents": "UIRadioButtonDefaultStyler"
    },
    {
      "trigger": "UISegmentedControl",
      "contents": "UISegmentedControl"
    },
    {
      "trigger": "UISegmentedControlItem",
      "contents": "UISegmentedControlItem"
    },
    {
      "trigger": "UISegmentedControlStyler",
      "contents": "UISegmentedControlStyler"
    },
    {
      "trigger": "UISegmentedControlDefaultStyler",
      "contents": "UISegmentedControlDefaultStyler"
    },
    {
      "trigger": "UILabel",
      "contents": "UILabel"
    },
    {
      "trigger": "UITextField",
      "contents": "UITextField"
    },
    {
      "trigger": "UITokenField",
      "contents": "UITokenField"
    },
    {
      "trigger": "UITextLayer",
      "contents": "UITextLayer"
    },
    {
      "trigger": "UIImageView",
      "contents": "UIImageView"
    },
    {
      "trigger": "UIImageLayer",
      "contents": "UIImageLayer"
    },
    {
      "trigger": "UIScrollView",
      "contents": "UIScrollView"
    },
    {
      "trigger": "UIScroller",
      "contents": "UIScroller"
    },
    {
      "trigger": "UIScrollerStyler",
      "contents": "UIScrollerStyler"
    },
    {
      "trigger": "UIScrollerDefaultStyler",
      "contents": "UIScrollerDefaultStyler"
    },
    {
      "trigger": "UIListView",
      "contents": "UIListView"
    },
    {
      "trigger": "UIListViewStyler",
      "contents": "UIListViewStyler"
    },
    {
      "trigger": "UIListViewDefaultStyler",
      "contents": "UIListViewDefaultStyler"
    },
    {
      "trigger": "UIListViewCell",
      "contents": "UIListViewCell"
    },
    {
      "trigger": "UIListViewHeaderFooterView",
      "contents": "UIListViewHeaderFooterView"
    },
    {
      "trigger": "UIListViewController",
      "contents": "UIListViewController"
    },
    {
      "trigger": "UIOutlineView",
      "contents": "UIOutlineView"
    },
    {
      "trigger": "UIOutlineViewDefaultStyler",
      "contents": "UIOutlineViewDefaultStyler"
    },
    {
      "trigger": "UIOutlineViewCell",
      "contents": "UIOutlineViewCell"
    },
    {
      "trigger": "UIStackView",
      "contents": "UIStackView"
    },
    {
      "trigger": "UITabView",
      "contents": "UITabView"
    },
    {
      "trigger": "UITabViewStyler",
      "contents": "UITabViewStyler"
    },
    {
      "trigger": "UITabViewDefaultStyler",
      "contents": "UITabViewDefaultStyler"
    },
    {
      "trigger": "UITabItemsView",
      "contents": "UITabItemsView"
    },
    {
      "trigger": "UITabItemView",
      "contents": "UITabItemView"
    },
    {
      "trigger": "UITabViewItem",
      "contents": "UITabViewItem"
    },
    {
      "trigger": "UITabViewController",
      "contents": "UITabViewController"
    },
    {
      "trigger": "UIPasteboard",
      "contents": "UIPasteboard"
    },
    {
      "trigger": "UIDraggingSession",
      "contents": "UIDraggingSession"
    },
    {
      "trigger": "UIDragItem",
      "contents": "UIDragItem"
    },
    {
      "trigger": "UIPopupWindow",
      "contents": "UIPopupWindow"
    },
    {
      "trigger": "UIPopupWindowStyler",
      "contents": "UIPopupWindowStyler"
    },
    {
      "trigger": "UIAlertController",
      "contents": "UIAlertController"
    },
    {
      "trigger": "UIAlertAction",
      "contents": "UIAlertAction"
    },
    {
      "trigger": "UIOpenPanel",
      "contents": "UIOpenPanel"
    },
    {
      "trigger": "UISavePanel",
      "contents": "UISavePanel"
    },
    {
      "trigger": "UIActivityIndicatorView",
      "contents": "UIActivityIndicatorView"
    },
    {
      "trigger": "UIProgressIndicatorView",
      "contents": "UIProgressIndicatorView"
    },
    {
      "trigger": "UIMenu",
      "contents": "UIMenu"
    },
    {
      "trigger": "UIMenuStyler",
      "contents": "UIMenuStyler"
    },
    {
      "trigger": "UIMenuDefaultStyler",
      "contents": "UIMenuDefaultStyler"
    },
    {
      "trigger": "UIMenuWindow",
      "contents": "UIMenuWindow"
    },
    {
      "trigger": "UIMenuView",
      "contents": "UIMenuView"
    },
    {
      "trigger": "UIMenuItemView",
      "contents": "UIMenuItemView"
    },
    {
      "trigger": "UIMenuItemSeparatorView",
      "contents": "UIMenuItemSeparatorView"
    },
    {
      "trigger": "UIMenuItem",
      "contents": "UIMenuItem"
    },
    {
      "trigger": "UIMenuBar",
      "contents": "UIMenuBar"
    },
    {
      "trigger": "UIMenuBarItem",
      "contents": "UIMenuBarItem"
    },
    {
      "trigger": "UISplitView",
      "contents": "UISplitView"
    },
    {
      "trigger": "UISplitViewController",
      "contents": "UISplitViewController"
    },
    {
      "trigger": "UIWebView",
      "contents": "UIWebView"
    },
    {
      "trigger": "SKApplication",
      "contents": "SKApplication"
    },
    {
      "trigger": "SKHTTPServer",
      "contents": "SKHTTPServer"
    },
    {
      "trigger": "SKHTTPRoute",
      "contents": "SKHTTPRoute"
    },
    {
      "trigger": "SKHTTPRequest",
      "contents": "SKHTTPRequest"
    },
    {
      "trigger": "SKHTTPResponse",
      "contents": "SKHTTPResponse"
    },
    {
      "trigger": "SKHTTPResponder",
      "contents": "SKHTTPResponder"
    },
    {
      "trigger": "SKHTTPAuthorization",
      "contents": "SKHTTPAuthorization"
    },
    {
      "trigger": "SKHTTPAuthorization\tConstructor",
      "contents": "SKHTTPAuthorization(${1:authorized})"
    },
    {
      "trigger": "SKHTTPAuthorization\tStatus Constructor",
      "contents": "SKHTTPAuthorization(${1:authorized}, ${2:authenticated}, ${3:statusCode})"
    },
    {
      "trigger": "SKHTTPResponderContext",
      "contents": "SKHTTPResponderContext"
    },
    {
      "trigger": "SKHTTPError",
      "contents": "SKHTTPError"
    },
    {
      "trigger": "SKHTTPError\tConstructor",
      "contents": "SKHTTPError(${1:statusCode}, ${2:message})"
    },
    {
      "trigger": "SKHTTPWebSocket",
      "contents": "SKHTTPWebSocket"
    },
    {
      "trigger": "SKHTTPWebSocketResponder",
      "contents": "SKHTTPWebSocketResponder"
    },
    {
      "trigger": "SKValidatingObject",
      "contents": "SKValidatingObject"
    },
    {
      "trigger": "Error",
      "contents": "Error"
    },
    {
      "trigger": "Error\tConstructor",
      "contents": "Error(${1:message})"
    },
    {
      "trigger": "JSClass",
      "contents": "JSClass"
    },
    {
      "trigger": "JSClass\tConstructor",
      "contents": "JSClass(${1:className}, ${2:superclass}, ${3:extensions})"
    },
    {
      "trigger": "JSObject",
      "contents": "JSObject"
    },
    {
      "trigger": "JSCustomProperty",
      "contents": "JSCustomProperty"
    },
    {
      "trigger": "JSDynamicProperty",
      "contents": "JSDynamicProperty"
    },
    {
      "trigger": "JSDynamicProperty\tConstructor",
      "contents": "JSDynamicProperty()"
    },
    {
      "trigger": "JSDynamicProperty\tPrivate Constructor",
      "contents": "JSDynamicProperty(${1:privateName}, ${2:intialValue})"
    },
    {
      "trigger": "JSDynamicProperty\tFull Constructor",
      "contents": "JSDynamicProperty(${1:privateName}, ${2:intialValue}, ${3:getterName}, ${4:setterName})"
    },
    {
      "trigger": "JSReadOnlyProperty",
      "contents": "JSReadOnlyProperty"
    },
    {
      "trigger": "JSReadOnlyProperty\tConstructor",
      "contents": "JSReadOnlyProperty()"
    },
    {
      "trigger": "JSReadOnlyProperty\tPrivate Constructor",
      "contents": "JSReadOnlyProperty(${1:privateName}, ${2:intialValue})"
    },
    {
      "trigger": "JSReadOnlyProperty\tFull Constructor",
      "contents": "JSReadOnlyProperty(${1:privateName}, ${2:intialValue}, ${3:getterName})"
    },
    {
      "trigger": "JSLazyInitProperty",
      "contents": "JSLazyInitProperty"
    },
    {
      "trigger": "JSLazyInitProperty\tConstructor",
      "contents": "JSLazyInitProperty(${1:createMethodName})"
    },
    {
      "trigger": "JSLazyInitProperty\tFull Constructor",
      "contents": "JSLazyInitProperty(${1:createMethodName}, ${2:privatePropertyName})"
    },
    {
      "trigger": "String",
      "contents": "String"
    },
    {
      "trigger": "JSAttributedString",
      "contents": "JSAttributedString"
    },
    {
      "trigger": "JSData",
      "contents": "JSData"
    },
    {
      "trigger": "UnicodeChar",
      "contents": "UnicodeChar"
    },
    {
      "trigger": "UnicodeChar\tConstructor",
      "contents": "UnicodeChar(${1:code})"
    },
    {
      "trigger": "UnicodeIterator",
      "contents": "UnicodeIterator"
    },
    {
      "trigger": "UserPerceivedCharacterIterator",
      "contents": "UserPerceivedCharacterIterator"
    },
    {
      "trigger": "JSDate",
      "contents": "JSDate"
    },
    {
      "trigger": "JSDateFormatter",
      "contents": "JSDateFormatter"
    },
    {
      "trigger": "JSCalendar",
      "contents": "JSCalendar"
    },
    {
      "trigger": "Components",
      "contents": "Components"
    },
    {
      "trigger": "JSLocale",
      "contents": "JSLocale"
    },
    {
      "trigger": "JSTimeZone",
      "contents": "JSTimeZone"
    },
    {
      "trigger": "JSRange",
      "contents": "JSRange"
    },
    {
      "trigger": "JSRange\tConstructor",
      "contents": "JSRange(${1:location}, ${2:length})"
    },
    {
      "trigger": "JSRange\tCopy Constructor",
      "contents": "JSRange(${1:range})"
    },
    {
      "trigger": "JSIndexPath",
      "contents": "JSIndexPath"
    },
    {
      "trigger": "JSIndexPath\tConstructor",
      "contents": "JSIndexPath(${1:section}, ${2:row})"
    },
    {
      "trigger": "JSIndexPath\tArray Constructor",
      "contents": "JSIndexPath(${1:components})"
    },
    {
      "trigger": "JSIndexPath\tCopy Constructor",
      "contents": "JSIndexPath(${1:indexPath})"
    },
    {
      "trigger": "JSIndexSet",
      "contents": "JSIndexSet"
    },
    {
      "trigger": "JSIndexSet\tConstructor",
      "contents": "JSIndexSet()"
    },
    {
      "trigger": "JSIndexSet\tCopy Constructor",
      "contents": "JSIndexSet(${1:otherIndexSet})"
    },
    {
      "trigger": "JSIndexSet\tRange Constructor",
      "contents": "JSIndexSet()"
    },
    {
      "trigger": "JSContext",
      "contents": "JSContext"
    },
    {
      "trigger": "JSPoint",
      "contents": "JSPoint"
    },
    {
      "trigger": "JSPoint\tConstructor",
      "contents": "JSPoint(${1:x}, ${2:y})"
    },
    {
      "trigger": "JSPoint\tCopy Constructor",
      "contents": "JSPoint(${1:other})"
    },
    {
      "trigger": "JSSize",
      "contents": "JSSize"
    },
    {
      "trigger": "JSSize\tConstructor",
      "contents": "JSSize(${1:width}, ${2:height})"
    },
    {
      "trigger": "JSSize\tCopy Constructor",
      "contents": "JSSize(${1:other})"
    },
    {
      "trigger": "JSRect",
      "contents": "JSRect"
    },
    {
      "trigger": "JSRect\tExpanded Constructor",
      "contents": "JSRect(${1:x}, ${2:y}, ${3:width}, ${4:height})"
    },
    {
      "trigger": "JSRect\tConstructor",
      "contents": "JSRect(${1:origin}, ${2:size})"
    },
    {
      "trigger": "JSRect\tCopy Constructor",
      "contents": "JSRect(${1:other})"
    },
    {
      "trigger": "JSInsets",
      "contents": "JSInsets"
    },
    {
      "trigger": "JSInsets\tConstructor",
      "contents": "JSInsets(${1:top}, ${2:left}, ${3:bottom}, ${4:right})"
    },
    {
      "trigger": "JSInsets\tSingle Value Constructor",
      "contents": "JSInsets(${1:all})"
    },
    {
      "trigger": "JSInsets\tMirrored Constructor",
      "contents": "JSInsets(${1:topAndBottom}, ${2:leftAndRight})"
    },
    {
      "trigger": "JSInsets\tCopy Constructor",
      "contents": "JSInsets(${1:other})"
    },
    {
      "trigger": "JSAffineTransform",
      "contents": "JSAffineTransform"
    },
    {
      "trigger": "JSAffineTransform\tConstructor",
      "contents": "JSAffineTransform(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${5:tx}, ${6:tx})"
    },
    {
      "trigger": "JSAffineTransform\tCopy Constructor",
      "contents": "JSAffineTransform(${1:other})"
    },
    {
      "trigger": "JSColor",
      "contents": "JSColor"
    },
    {
      "trigger": "JSGradient",
      "contents": "JSGradient"
    },
    {
      "trigger": "JSImage",
      "contents": "JSImage"
    },
    {
      "trigger": "JSBundle",
      "contents": "JSBundle"
    },
    {
      "trigger": "Metadata",
      "contents": "Metadata"
    },
    {
      "trigger": "JSSpec",
      "contents": "JSSpec"
    },
    {
      "trigger": "JSUserDefaults",
      "contents": "JSUserDefaults"
    },
    {
      "trigger": "JSArguments",
      "contents": "JSArguments"
    },
    {
      "trigger": "Option",
      "contents": "Option"
    },
    {
      "trigger": "JSRunLoop",
      "contents": "JSRunLoop"
    },
    {
      "trigger": "JSUndoManager",
      "contents": "JSUndoManager"
    },
    {
      "trigger": "JSLog",
      "contents": "JSLog"
    },
    {
      "trigger": "JSLog\tConstructor",
      "contents": "JSLog(${1:subsystem}, ${2:category})"
    },
    {
      "trigger": "JSURL",
      "contents": "JSURL"
    },
    {
      "trigger": "JSURLSession",
      "contents": "JSURLSession"
    },
    {
      "trigger": "JSURLSessionTask",
      "contents": "JSURLSessionTask"
    },
    {
      "trigger": "JSURLSessionDataTask",
      "contents": "JSURLSessionDataTask"
    },
    {
      "trigger": "JSURLSessionStreamTask",
      "contents": "JSURLSessionStreamTask"
    },
    {
      "trigger": "JSURLSessionUploadTask",
      "contents": "JSURLSessionUploadTask"
    },
    {
      "trigger": "JSURLRequest",
      "contents": "JSURLRequest"
    },
    {
      "trigger": "JSURLResponse",
      "contents": "JSURLResponse"
    },
    {
      "trigger": "JSFormFieldMap",
      "contents": "JSFormFieldMap"
    },
    {
      "trigger": "JSFormFieldMap\tConstructor",
      "contents": "JSFormFieldMap()"
    },
    {
      "trigger": "JSFormFieldMap\tCopy Constructor",
      "contents": "JSFormFieldMap(${1:map})"
    },
    {
      "trigger": "JSFormField",
      "contents": "JSFormField"
    },
    {
      "trigger": "JSFormField\tConstructor",
      "contents": "JSFormField(${1:name}, ${2:value})"
    },
    {
      "trigger": "JSFormField\tConstructor",
      "contents": "JSFormField(${1:name})"
    },
    {
      "trigger": "JSFormField\tCopy Constructor",
      "contents": "JSFormField(${1:field})"
    },
    {
      "trigger": "JSMediaType",
      "contents": "JSMediaType"
    },
    {
      "trigger": "JSMediaType\tConstructor",
      "contents": "JSMediaType(${1:string})"
    },
    {
      "trigger": "JSMediaType\tFull Constructor",
      "contents": "JSMediaType(${1:string}, ${2:parameters})"
    },
    {
      "trigger": "JSMediaType\tCopy Constructor",
      "contents": "JSMediaType(${1:mediaType})"
    },
    {
      "trigger": "JSMIMEHeader",
      "contents": "JSMIMEHeader"
    },
    {
      "trigger": "JSMIMEHeader\tConstructor",
      "contents": "JSMIMEHeader(${1:name}, ${2:value})"
    },
    {
      "trigger": "JSMIMEHeader\tCopy Constructor",
      "contents": "JSMIMEHeader(${1:header})"
    },
    {
      "trigger": "JSMIMEHeaderMap",
      "contents": "JSMIMEHeaderMap"
    },
    {
      "trigger": "JSMIMEHeaderMap\tConstructor",
      "contents": "JSMIMEHeaderMap()"
    },
    {
      "trigger": "JSMIMEHeaderMap\tCopy Constructor",
      "contents": "JSMIMEHeaderMap(${1:map})"
    },
    {
      "trigger": "JSFont",
      "contents": "JSFont"
    },
    {
      "trigger": "JSFontDescriptor",
      "contents": "JSFontDescriptor"
    },
    {
      "trigger": "JSMD5Hash",
      "contents": "JSMD5Hash"
    },
    {
      "trigger": "JSMD5Hash\tConstructor",
      "contents": "JSMD5Hash()"
    },
    {
      "trigger": "JSSHA1Hash",
      "contents": "JSSHA1Hash"
    },
    {
      "trigger": "JSSHA1Hash\tConstructor",
      "contents": "JSSHA1Hash()"
    },
    {
      "trigger": "JSTimer",
      "contents": "JSTimer"
    },
    {
      "trigger": "JSNumberFormatter",
      "contents": "JSNumberFormatter"
    },
    {
      "trigger": "JSDispatchQueue",
      "contents": "JSDispatchQueue"
    },
    {
      "trigger": "JSDispatchJob",
      "contents": "JSDispatchJob"
    },
    {
      "trigger": "SECCipher",
      "contents": "SECCipher"
    },
    {
      "trigger": "SECKey",
      "contents": "SECKey"
    },
    {
      "trigger": "SECKeyPair",
      "contents": "SECKeyPair"
    },
    {
      "trigger": "SECHMAC",
      "contents": "SECHMAC"
    },
    {
      "trigger": "SECSign",
      "contents": "SECSign"
    },
    {
      "trigger": "RSAOptions",
      "contents": "RSAOptions"
    },
    {
      "trigger": "SECVerify",
      "contents": "SECVerify"
    },
    {
      "trigger": "SECHash",
      "contents": "SECHash"
    },
    {
      "trigger": "SECKeychain",
      "contents": "SECKeychain"
    },
    {
      "trigger": "SECJSONWebToken",
      "contents": "SECJSONWebToken"
    },
    {
      "trigger": "JSONWebKey",
      "contents": "JSONWebKey"
    },
    {
      "trigger": "OAService",
      "contents": "OAService"
    },
    {
      "trigger": "OASession",
      "contents": "OASession"
    },
    {
      "trigger": "IKBitmap",
      "contents": "IKBitmap"
    },
    {
      "trigger": "IKDecoder",
      "contents": "IKDecoder"
    },
    {
      "trigger": "IKEncoder",
      "contents": "IKEncoder"
    },
    {
      "trigger": "PDFReader",
      "contents": "PDFReader"
    },
    {
      "trigger": "PDFReaderStream",
      "contents": "PDFReaderStream"
    },
    {
      "trigger": "PDFReaderDataStream",
      "contents": "PDFReaderDataStream"
    },
    {
      "trigger": "PDFDocument",
      "contents": "PDFDocument"
    },
    {
      "trigger": "PDFPage",
      "contents": "PDFPage"
    },
    {
      "trigger": "PDFOperationIterator",
      "contents": "PDFOperationIterator"
    },
    {
      "trigger": "PDFStreamOperation",
      "contents": "PDFStreamOperation"
    },
    {
      "trigger": "PDFGraphicsState",
      "contents": "PDFGraphicsState"
    },
    {
      "trigger": "PDFObject",
      "contents": "PDFObject"
    },
    {
      "trigger": "PDFName",
      "contents": "PDFName"
    },
    {
      "trigger": "PDFResources",
      "contents": "PDFResources"
    },
    {
      "trigger": "PDFColorSpace",
      "contents": "PDFColorSpace"
    },
    {
      "trigger": "PDFFont",
      "contents": "PDFFont"
    },
    {
      "trigger": "PDFImage",
      "contents": "PDFImage"
    },
    {
      "trigger": "PDFForm",
      "contents": "PDFForm"
    },
    {
      "trigger": "PDFStream",
      "contents": "PDFStream"
    },
    {
      "trigger": "PDFXObject",
      "contents": "PDFXObject"
    },
    {
      "trigger": "PDFDrawing",
      "contents": "PDFDrawing"
    },
    {
      "trigger": "PDFContext",
      "contents": "PDFContext"
    },
    {
      "trigger": "PageOptions",
      "contents": "PageOptions"
    },
    {
      "trigger": "FNTOpenTypeFont",
      "contents": "FNTOpenTypeFont"
    },
    {
      "trigger": "FNTOpenTypeFontTable",
      "contents": "FNTOpenTypeFontTable"
    },
    {
      "trigger": "FNTOpenTypeFontTableHead",
      "contents": "FNTOpenTypeFontTableHead"
    },
    {
      "trigger": "FNTOpenTypeFontTableOS2",
      "contents": "FNTOpenTypeFontTableOS2"
    },
    {
      "trigger": "FNTOpenTypeFontTablePost",
      "contents": "FNTOpenTypeFontTablePost"
    },
    {
      "trigger": "FNTOpenTypeFontTableName",
      "contents": "FNTOpenTypeFontTableName"
    },
    {
      "trigger": "FNTOpenTypeFontTableHhea",
      "contents": "FNTOpenTypeFontTableHhea"
    },
    {
      "trigger": "FNTOpenTypeFontTableHmtx",
      "contents": "FNTOpenTypeFontTableHmtx"
    },
    {
      "trigger": "FNTOpenTypeFontTableCmap",
      "contents": "FNTOpenTypeFontTableCmap"
    },
    {
      "trigger": "FNTOpenTypeFontCmap",
      "contents": "FNTOpenTypeFontCmap"
    },
    {
      "trigger": "FNTOpenTypeConstructor",
      "contents": "FNTOpenTypeConstructor"
    },
    {
      "trigger": "FNTFontDescriptor",
      "contents": "FNTFontDescriptor"
    },
    {
      "trigger": "FNTCompactFontFormat",
      "contents": "FNTCompactFontFormat"
    },
    {
      "trigger": "ExternalInfo",
      "contents": "ExternalInfo"
    },
    {
      "trigger": "TKTestSuite",
      "contents": "TKTestSuite"
    },
    {
      "trigger": "TKExpectation",
      "contents": "TKExpectation"
    }
  ]
}